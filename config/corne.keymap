/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q           &kp W           &kp F        &kp P             &kp B        &kp J      &kp L            &kp U        &kp Y            &kp SQT          &none
&none  &mt LEFT_GUI A  &mt LEFT_ALT R  &mt LCTRL S  &mt LEFT_SHIFT T  &kp G        &kp M      &mt RSHIFT N     &mt RCTRL E  &mt RIGHT_ALT I  &mt RIGHT_GUI O  &none
&none  &kp Z           &kp X           &kp C        &kp D             &kp V        &kp K      &kp H            &kp COMMA    &kp DOT          &kp FSLH         &none
                                       &lt 1 ESC    &lt 2 SPACE       &lt 3 TAB    &lt 4 RET  &lt 5 BACKSPACE  &lt 6 DEL
            >;
        };

        Media {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none         &none         &none      &none           &none    &rgb_ug RGB_TOG    &none             &none         &none         &none               &none
&none  &kp LEFT_GUI  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &ext_power EP_TOG  &kp C_REWIND      &kp C_VOL_DN  &kp C_VOL_UP  &kp C_FAST_FORWARD  &none
&none  &none         &none         &none      &none           &none    &out OUT_TOG       &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3        &none
                                   &trans     &none           &none    &kp C_STOP         &kp C_PLAY_PAUSE  &kp C_MUTE
            >;
        };

        Nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &none  &none  &none  &none   &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none   &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none   &none    &none  &none  &none  &none  &none  &none
                     &none  &trans  &none    &none  &none  &none
            >;
        };

        Mouse {
            bindings = <
&none  &none  &none  &none  &none  &none     &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none     &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none     &none  &none  &none  &none  &none  &none
                     &none  &none  &trans    &none  &none  &none
            >;
        };

        Sym {
            bindings = <
&none  &none  &none  &none  &none  &none    &none   &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none   &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none   &none  &none  &none  &none  &none
                     &none  &none  &none    &trans  &none  &none
            >;
        };

        Num {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none   &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none   &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none   &none  &none  &none  &none
                     &none  &none  &none    &none  &trans  &none
            >;
        };

        Fun {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none   &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none   &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none   &none  &none  &none
                     &none  &none  &none    &none  &none  &trans
            >;
        };
    };
};
